#!/bin/bash

# Directory for the compiled binaries
BIN_DIR="./bin"
LICENSE_FILE="./LICENSE" # assuming the LICENSE file is in the current directory
rm -rf "${BIN_DIR}"
mkdir -p "${BIN_DIR}"

# Function to build, compress, and print SHA256
build_compress_sha() {
  os=$1
  arch=$2
  bin_name="kubectl-autons"
  if [ "${os}" == "windows" ]; then
    bin_name="${bin_name}.exe"
  fi

  echo "Building for ${os} (${arch})..."
  env GOOS=${os} GOARCH=${arch} go build -ldflags="-w -s" -o "${BIN_DIR}/${bin_name}" src/main.go

  # Add the LICENSE file to the binary directory
  cp ${LICENSE_FILE} "${BIN_DIR}/LICENSE"

  # Create tar.gz file

  tar -cf "${BIN_DIR}/kubectl-autons-${os}-${arch}.tar.gz" -C "${BIN_DIR}" ${bin_name} LICENSE

  # Remove the binary and LICENSE file to avoid duplication in the next build
  rm "${BIN_DIR}/${bin_name}"
  rm "${BIN_DIR}/LICENSE"

  # Calculate the SHA256 checksum
  shasum -a 256 "${BIN_DIR}/kubectl-autons-${os}-${arch}.tar.gz"
}

# macOS (Intel)
build_compress_sha "darwin" "amd64"

# macOS (M1)
build_compress_sha "darwin" "arm64"

# Linux
build_compress_sha "linux" "amd64"

# Windows
build_compress_sha "windows" "amd64"

echo "Build and SHA256 checksum complete."
